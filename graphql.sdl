directive @scrape on FIELD
directive @css(path: String!, attribute: String) on FIELD
directive @elements(cssPath: String!) on FIELD

directive @testPage(url: String!) on QUERY
directive @match(url: Regex) on QUERY

directive @telegram(userName: String, template: String) on SUBSCRIPTION
directive @daemonize on SUBSCRIPTION

scalar Regex
scalar GeolocatableString

schema {
  query: Query
  subscription: Subscription
}

type Query {
  realEstate: [Property]
  crawler: Listing
}

scalar Url

type Pagination {
  next: Url
  previous: Url
  first: Url
  last: Url
  pages: [Url]
  current: Url
}

type ListItem {
  title: String
  url: Url
}

type Listing {
  pagination: Pagination
  collection: [ListItem]
}

enum CurrencyCode {
  EUR
  USD
}

type Currency {
  value: Float
  code: CurrencyCode!
  symbol: String
  formatted: String
}

type Address {
  street: String
}

type ContactData {
  email: String
}

type Photo {
  title: String
  url: String
}

scalar Date

interface Property {
  id: ID
  title: String
  price: String
  buildYear: Date
  description: String
  misc: String
  proximity: String
  facilities: [String]
  condition: String
  buildingType: String
  photos: [Photo]
  rent: PropertyRent
  sale: PropertySale
}

type Phone {
  phone: String
  mobile: String
  fax: String
}

type OnlineProfiles {
  email: String
  twitter: String
  facebook: String
  website: String
}

type Company {
  name: String
  address: Address
  contactData: ContactData
}

type Contact {
  firstName: String
  lastName: String
  company: Company
  address: Address
  phone: Phone
  online: OnlineProfiles
  businessHours: String
}

type PropertyRent {
  utilities: Currency
  heatingCosts: Currency
  basePrice: Currency
  totalPrice: Currency
  deposit: Currency
  interval: RentInterval
  minContractLength: Int
  maxContractLength: Int
  unlimitedContract: Boolean
}

type PropertySale {
  utilities: Currency
  heatingCosts: Currency
  basePrice: Currency
  totalPrice: Currency
}

type House implements Property {
  id: ID
  title: String
  price: String
  buildYear: Date
  description: String
  misc: String
  proximity: String
  facilities: [String]
  condition: String
  buildingType: String
  photos: [Photo]
  rent: PropertyRent
  sale: PropertySale
}

type Flat implements Property {
  id: ID
  title: String
  price: String
  buildYear: Date
  description: String
  misc: String
  proximity: String
  facilities: [String]
  condition: String
  buildingType: String
  photos: [Photo]
  rent: PropertyRent
  sale: PropertySale
}

type Plot implements Property {
  id: ID
  title: String
  price: String
  buildYear: Date
  description: String
  misc: String
  proximity: String
  facilities: [String]
  condition: String
  buildingType: String
  photos: [Photo]
  rent: PropertyRent
  sale: PropertySale
}

enum RentInterval {
  HOURLY
  DAILY
  WEEKLY
  BIWEEKLY
  MONTHLY
  YEARLY
}

input PropertyFilter {
  maxPrice: Int
  minPrice: Int
  location: GeolocatableString
  radius: Int
}

type Subscription {
  propertyAdded(filter: PropertyFilter): Property
}
